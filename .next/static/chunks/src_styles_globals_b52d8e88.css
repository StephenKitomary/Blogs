/* [project]/src/styles/globals.css [app-client] (css) */
@layer properties;
@layer theme, base, components, utilities;

@layer theme {
  :root, :host {
    --font-sans: var(--font-sans);
    --font-mono: var(--font-mono);
    --color-red-500: oklch(63.7% .237 25.331);
    --color-yellow-400: oklch(85.2% .199 91.936);
    --color-yellow-500: oklch(79.5% .184 86.047);
    --color-cyan-500: oklch(71.5% .143 215.221);
    --color-blue-50: oklch(97% .014 254.604);
    --color-blue-500: oklch(62.3% .214 259.815);
    --color-blue-600: oklch(54.6% .245 262.881);
    --color-violet-500: oklch(60.6% .25 292.717);
    --color-zinc-50: oklch(98.5% 0 0);
    --color-zinc-100: oklch(96.7% .001 286.375);
    --color-zinc-200: oklch(92% .004 286.32);
    --color-zinc-300: oklch(87.1% .006 286.286);
    --color-zinc-400: oklch(70.5% .015 286.067);
    --color-zinc-500: oklch(55.2% .016 285.938);
    --color-zinc-600: oklch(44.2% .017 285.786);
    --color-zinc-700: oklch(37% .013 285.805);
    --color-zinc-800: oklch(27.4% .006 286.033);
    --color-zinc-900: oklch(21% .006 285.885);
    --color-zinc-950: oklch(14.1% .005 285.823);
    --color-black: #000;
    --color-white: #fff;
    --spacing: .25rem;
    --container-sm: 24rem;
    --container-3xl: 48rem;
    --text-xs: .75rem;
    --text-xs--line-height: calc(1 / .75);
    --text-sm: .875rem;
    --text-sm--line-height: calc(1.25 / .875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --tracking-widest: .1em;
    --leading-snug: 1.375;
    --radius-sm: .25rem;
    --radius-md: .375rem;
    --radius-lg: .5rem;
    --radius-xl: .75rem;
    --radius-2xl: 1rem;
    --animate-ping: ping 1s cubic-bezier(0, 0, .2, 1) infinite;
    --blur-lg: 16px;
    --default-transition-duration: .15s;
    --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}

@layer base {
  *, :after, :before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }

  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }

  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }

  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }

  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }

  b, strong {
    font-weight: bolder;
  }

  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }

  small {
    font-size: 80%;
  }

  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }

  sub {
    bottom: -.25em;
  }

  sup {
    top: -.5em;
  }

  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }

  :-moz-focusring {
    outline: auto;
  }

  progress {
    vertical-align: baseline;
  }

  summary {
    display: list-item;
  }

  ol, ul, menu {
    list-style: none;
  }

  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }

  img, video {
    max-width: 100%;
    height: auto;
  }

  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: #0000;
    opacity: 1;
  }

  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }

  ::file-selector-button {
    margin-inline-end: 4px;
  }

  ::placeholder {
    opacity: 1;
  }

  @supports (not ((-webkit-appearance: -apple-pay-button))) or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentColor;
    }

    @supports (color: color-mix(in lab, red, red)) {
      ::placeholder {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }

  textarea {
    resize: vertical;
  }

  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }

  ::-webkit-datetime-edit {
    display: inline-flex;
  }

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }

  :-moz-ui-invalid {
    box-shadow: none;
  }

  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }

  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }

  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}

@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }

  .visible {
    visibility: visible;
  }

  .screen-line-before {
    position: relative;
  }

  .screen-line-before:before {
    content: var(--tw-content);
    position: absolute;
  }

  .screen-line-before:before {
    content: var(--tw-content);
    top: calc(var(--spacing) * 0);
  }

  .screen-line-before:before {
    content: var(--tw-content);
    left: -100vw;
  }

  .screen-line-before:before {
    content: var(--tw-content);
    z-index: calc(1 * -1);
  }

  .screen-line-before:before {
    content: var(--tw-content);
    height: 1px;
  }

  .screen-line-before:before {
    content: var(--tw-content);
    width: 200vw;
  }

  .screen-line-before:before {
    content: var(--tw-content);
    background-color: var(--d-grid);
  }

  .screen-line-after {
    position: relative;
  }

  .screen-line-after:after {
    content: var(--tw-content);
    position: absolute;
  }

  .screen-line-after:after {
    content: var(--tw-content);
    bottom: calc(var(--spacing) * 0);
  }

  .screen-line-after:after {
    content: var(--tw-content);
    left: -100vw;
  }

  .screen-line-after:after {
    content: var(--tw-content);
    z-index: calc(1 * -1);
  }

  .screen-line-after:after {
    content: var(--tw-content);
    height: 1px;
  }

  .screen-line-after:after {
    content: var(--tw-content);
    width: 200vw;
  }

  .screen-line-after:after {
    content: var(--tw-content);
    background-color: var(--d-grid);
  }

  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }

  .absolute {
    position: absolute;
  }

  .fixed {
    position: fixed;
  }

  .relative {
    position: relative;
  }

  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }

  .-inset-x-1\.5 {
    inset-inline: calc(var(--spacing) * -1.5);
  }

  .-inset-x-12 {
    inset-inline: calc(var(--spacing) * -12);
  }

  .inset-x-0 {
    inset-inline: calc(var(--spacing) * 0);
  }

  .-inset-y-1 {
    inset-block: calc(var(--spacing) * -1);
  }

  .inset-y-0 {
    inset-block: calc(var(--spacing) * 0);
  }

  .-top-2 {
    top: calc(var(--spacing) * -2);
  }

  .-top-\[5px\] {
    top: -5px;
  }

  .-top-px {
    top: -1px;
  }

  .top-0 {
    top: calc(var(--spacing) * 0);
  }

  .top-1\/2 {
    top: 50%;
  }

  .top-2 {
    top: calc(var(--spacing) * 2);
  }

  .top-9 {
    top: calc(var(--spacing) * 9);
  }

  .top-16 {
    top: calc(var(--spacing) * 16);
  }

  .-right-\[5px\] {
    right: -5px;
  }

  .-right-px {
    right: -1px;
  }

  .right-0 {
    right: calc(var(--spacing) * 0);
  }

  .right-2 {
    right: calc(var(--spacing) * 2);
  }

  .right-4 {
    right: calc(var(--spacing) * 4);
  }

  .right-16 {
    right: calc(var(--spacing) * 16);
  }

  .-bottom-3 {
    bottom: calc(var(--spacing) * -3);
  }

  .-bottom-\[5px\] {
    bottom: -5px;
  }

  .-bottom-px {
    bottom: -1px;
  }

  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }

  .bottom-16 {
    bottom: calc(var(--spacing) * 16);
  }

  .bottom-\[calc\(1rem\+env\(safe-area-inset-bottom\,0px\)\)\] {
    bottom: calc(1rem + env(safe-area-inset-bottom, 0px));
  }

  .bottom-\[calc\(4rem\+env\(safe-area-inset-bottom\,0px\)\)\] {
    bottom: calc(4rem + env(safe-area-inset-bottom, 0px));
  }

  .-left-\[5px\] {
    left: -5px;
  }

  .-left-px {
    left: -1px;
  }

  .left-1\/2 {
    left: 50%;
  }

  .left-2 {
    left: calc(var(--spacing) * 2);
  }

  .left-16 {
    left: calc(var(--spacing) * 16);
  }

  .left-\[2\.5\%\] {
    left: 2.5%;
  }

  .isolate {
    isolation: isolate;
  }

  .-z-1 {
    z-index: calc(1 * -1);
  }

  .z-1 {
    z-index: 1;
  }

  .z-10 {
    z-index: 10;
  }

  .z-50 {
    z-index: 50;
  }

  .-mx-1 {
    margin-inline: calc(var(--spacing) * -1);
  }

  .-mx-px {
    margin-inline: -1px;
  }

  .mx-4 {
    margin-inline: calc(var(--spacing) * 4);
  }

  .mx-\[2px\] {
    margin-inline: 2px;
  }

  .mx-auto {
    margin-inline: auto;
  }

  .rehype-pretty-code {
    margin-block: calc(var(--spacing) * 6);
  }

  .rehype-pretty-code pre {
    max-height: 512px;
    overflow-x: auto;
    border-radius: var(--radius-lg);
    background-color: var(--color-zinc-950);
    padding-block: calc(var(--spacing) * 4);
  }

  .rehype-pretty-code pre:where(.dark, .dark *) {
    background-color: var(--color-zinc-900);
  }

  .rehype-pretty-code code {
    font-family: var(--font-mono);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .rehype-pretty-code [data-line] {
    padding-inline: calc(var(--spacing) * 4);
  }

  .rehype-pretty-code [data-line]:first-child {
    padding-right: calc(var(--spacing) * 12);
  }

  .rehype-pretty-code [data-rehype-pretty-code-title] {
    margin-bottom: calc(var(--spacing) * 2);
    padding-inline: calc(var(--spacing) * 4);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .rehype-pretty-code code[data-line-numbers] {
    counter-reset: line;
  }

  .rehype-pretty-code code[data-line-numbers] > [data-line]:before {
    margin-right: calc(var(--spacing) * 8);
    display: inline-block;
    width: calc(var(--spacing) * 3);
    text-align: right;
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    color: var(--d-muted-foreground);
    counter-increment: line;
    content: counter(line);
  }

  .rehype-pretty-code code[data-line-numbers-max-digits="2"] > [data-line]:before {
    width: calc(var(--spacing) * 5);
  }

  .rehype-pretty-code code[data-line-numbers-max-digits="3"] > [data-line]:before {
    width: calc(var(--spacing) * 7);
  }

  .rehype-pretty-code code[data-line-numbers-max-digits="4"] > [data-line]:before {
    width: calc(var(--spacing) * 9);
  }

  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }

  .my-6 {
    margin-block: calc(var(--spacing) * 6);
  }

  .my-\[3px\] {
    margin-block: 3px;
  }

  .prose {
    color: var(--tw-prose-body);
    max-width: 65ch;
    --tw-prose-body: oklch(37.3% .034 259.733);
    --tw-prose-headings: oklch(21% .034 264.665);
    --tw-prose-lead: oklch(44.6% .03 256.802);
    --tw-prose-links: oklch(21% .034 264.665);
    --tw-prose-bold: oklch(21% .034 264.665);
    --tw-prose-counters: oklch(55.1% .027 264.364);
    --tw-prose-bullets: oklch(87.2% .01 258.338);
    --tw-prose-hr: oklch(92.8% .006 264.531);
    --tw-prose-quotes: oklch(21% .034 264.665);
    --tw-prose-quote-borders: oklch(92.8% .006 264.531);
    --tw-prose-captions: oklch(55.1% .027 264.364);
    --tw-prose-kbd: oklch(21% .034 264.665);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(21% .034 264.665);
    --tw-prose-pre-code: oklch(92.8% .006 264.531);
    --tw-prose-pre-bg: oklch(27.8% .033 256.848);
    --tw-prose-th-borders: oklch(87.2% .01 258.338);
    --tw-prose-td-borders: oklch(92.8% .006 264.531);
    --tw-prose-invert-body: oklch(87.2% .01 258.338);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(70.7% .022 261.325);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(70.7% .022 261.325);
    --tw-prose-invert-bullets: oklch(44.6% .03 256.802);
    --tw-prose-invert-hr: oklch(37.3% .034 259.733);
    --tw-prose-invert-quotes: oklch(96.7% .003 264.542);
    --tw-prose-invert-quote-borders: oklch(37.3% .034 259.733);
    --tw-prose-invert-captions: oklch(70.7% .022 261.325);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(87.2% .01 258.338);
    --tw-prose-invert-pre-bg: #00000080;
    --tw-prose-invert-th-borders: oklch(44.6% .03 256.802);
    --tw-prose-invert-td-borders: oklch(37.3% .034 259.733);
    font-size: 1rem;
    line-height: 1.75;
  }

  .prose :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }

  .prose :where([class~="lead"]):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-lead);
    font-size: 1.25em;
    line-height: 1.6;
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }

  .prose :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-links);
    text-decoration: underline;
    font-weight: 500;
  }

  .prose :where(strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-bold);
    font-weight: 600;
  }

  .prose :where(a strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }

  .prose :where(blockquote strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }

  .prose :where(thead th strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }

  .prose :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: decimal;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em;
  }

  .prose :where(ol[type="A"]):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: upper-alpha;
  }

  .prose :where(ol[type="a"]):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: lower-alpha;
  }

  .prose :where(ol[type="A" s]):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: upper-alpha;
  }

  .prose :where(ol[type="a" s]):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: lower-alpha;
  }

  .prose :where(ol[type="I"]):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: upper-roman;
  }

  .prose :where(ol[type="i"]):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: lower-roman;
  }

  .prose :where(ol[type="I" s]):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: upper-roman;
  }

  .prose :where(ol[type="i" s]):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: lower-roman;
  }

  .prose :where(ol[type="1"]):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: decimal;
  }

  .prose :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: disc;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em;
  }

  .prose :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *))::marker {
    font-weight: 400;
    color: var(--tw-prose-counters);
  }

  .prose :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *))::marker {
    color: var(--tw-prose-bullets);
  }

  .prose :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    margin-top: 1.25em;
  }

  .prose :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-color: var(--tw-prose-hr);
    border-top-width: 1px;
    margin-top: 3em;
    margin-bottom: 3em;
  }

  .prose :where(blockquote):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-weight: 500;
    font-style: italic;
    color: var(--tw-prose-quotes);
    border-inline-start-width: .25rem;
    border-inline-start-color: var(--tw-prose-quote-borders);
    quotes: "“""”""‘""’";
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-inline-start: 1em;
  }

  .prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"], [class~="not-prose"] *)):before {
    content: open-quote;
  }

  .prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"], [class~="not-prose"] *)):after {
    content: close-quote;
  }

  .prose :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 800;
    font-size: 2.25em;
    margin-top: 0;
    margin-bottom: .888889em;
    line-height: 1.11111;
  }

  .prose :where(h1 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-weight: 900;
    color: inherit;
  }

  .prose :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 700;
    font-size: 1.5em;
    margin-top: 2em;
    margin-bottom: 1em;
    line-height: 1.33333;
  }

  .prose :where(h2 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-weight: 800;
    color: inherit;
  }

  .prose :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    font-size: 1.25em;
    margin-top: 1.6em;
    margin-bottom: .6em;
    line-height: 1.6;
  }

  .prose :where(h3 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-weight: 700;
    color: inherit;
  }

  .prose :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    margin-top: 1.5em;
    margin-bottom: .5em;
    line-height: 1.5;
  }

  .prose :where(h4 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-weight: 700;
    color: inherit;
  }

  .prose :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .prose :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    display: block;
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .prose :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .prose :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-weight: 500;
    font-family: inherit;
    color: var(--tw-prose-kbd);
    box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
    font-size: .875em;
    border-radius: .3125rem;
    padding-top: .1875em;
    padding-inline-end: .375em;
    padding-bottom: .1875em;
    padding-inline-start: .375em;
  }

  .prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-code);
    font-weight: 600;
    font-size: .875em;
  }

  .prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)):before {
    content: "`";
  }

  .prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)):after {
    content: "`";
  }

  .prose :where(a code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }

  .prose :where(h1 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }

  .prose :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
    font-size: .875em;
  }

  .prose :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
    font-size: .9em;
  }

  .prose :where(h4 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }

  .prose :where(blockquote code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }

  .prose :where(thead th code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }

  .prose :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-pre-code);
    background-color: var(--tw-prose-pre-bg);
    overflow-x: auto;
    font-weight: 400;
    font-size: .875em;
    line-height: 1.71429;
    margin-top: 1.71429em;
    margin-bottom: 1.71429em;
    border-radius: .375rem;
    padding-top: .857143em;
    padding-inline-end: 1.14286em;
    padding-bottom: .857143em;
    padding-inline-start: 1.14286em;
  }

  .prose :where(pre code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    background-color: #0000;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
  }

  .prose :where(pre code):not(:where([class~="not-prose"], [class~="not-prose"] *)):before {
    content: none;
  }

  .prose :where(pre code):not(:where([class~="not-prose"], [class~="not-prose"] *)):after {
    content: none;
  }

  .prose :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    width: 100%;
    table-layout: auto;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: .875em;
    line-height: 1.71429;
  }

  .prose :where(thead):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-th-borders);
  }

  .prose :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    vertical-align: bottom;
    padding-inline-end: .571429em;
    padding-bottom: .571429em;
    padding-inline-start: .571429em;
  }

  .prose :where(tbody tr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-td-borders);
  }

  .prose :where(tbody tr:last-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-bottom-width: 0;
  }

  .prose :where(tbody td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    vertical-align: baseline;
  }

  .prose :where(tfoot):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-top-width: 1px;
    border-top-color: var(--tw-prose-th-borders);
  }

  .prose :where(tfoot td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    vertical-align: top;
  }

  .prose :where(th, td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    text-align: start;
  }

  .prose :where(figure > *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
    margin-bottom: 0;
  }

  .prose :where(figcaption):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-captions);
    font-size: .875em;
    line-height: 1.42857;
    margin-top: .857143em;
  }

  .prose :where(picture > img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
    margin-bottom: 0;
  }

  .prose :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: .5em;
    margin-bottom: .5em;
  }

  .prose :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-start: .375em;
  }

  .prose :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-start: .375em;
  }

  .prose :where(.prose > ul > li p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: .75em;
    margin-bottom: .75em;
  }

  .prose :where(.prose > ul > li > p:first-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
  }

  .prose :where(.prose > ul > li > p:last-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-bottom: 1.25em;
  }

  .prose :where(.prose > ol > li > p:first-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
  }

  .prose :where(.prose > ol > li > p:last-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-bottom: 1.25em;
  }

  .prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: .75em;
    margin-bottom: .75em;
  }

  .prose :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }

  .prose :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: .5em;
    padding-inline-start: 1.625em;
  }

  .prose :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }

  .prose :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }

  .prose :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }

  .prose :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }

  .prose :where(thead th:first-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-start: 0;
  }

  .prose :where(thead th:last-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-end: 0;
  }

  .prose :where(tbody td, tfoot td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-top: .571429em;
    padding-inline-end: .571429em;
    padding-bottom: .571429em;
    padding-inline-start: .571429em;
  }

  .prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-start: 0;
  }

  .prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-end: 0;
  }

  .prose :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .prose :where(.prose > :first-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }

  .prose :where(.prose > :last-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-bottom: 0;
  }

  .prose-sm {
    font-size: .875rem;
    line-height: 1.71429;
  }

  .prose-sm :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.14286em;
    margin-bottom: 1.14286em;
  }

  .prose-sm :where([class~="lead"]):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 1.28571em;
    line-height: 1.55556;
    margin-top: .888889em;
    margin-bottom: .888889em;
  }

  .prose-sm :where(blockquote):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.33333em;
    margin-bottom: 1.33333em;
    padding-inline-start: 1.11111em;
  }

  .prose-sm :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 2.14286em;
    margin-top: 0;
    margin-bottom: .8em;
    line-height: 1.2;
  }

  .prose-sm :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 1.42857em;
    margin-top: 1.6em;
    margin-bottom: .8em;
    line-height: 1.4;
  }

  .prose-sm :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: 1.28571em;
    margin-top: 1.55556em;
    margin-bottom: .444444em;
    line-height: 1.55556;
  }

  .prose-sm :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.42857em;
    margin-bottom: .571429em;
    line-height: 1.42857;
  }

  .prose-sm :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.71429em;
    margin-bottom: 1.71429em;
  }

  .prose-sm :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.71429em;
    margin-bottom: 1.71429em;
  }

  .prose-sm :where(picture > img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
    margin-bottom: 0;
  }

  .prose-sm :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.71429em;
    margin-bottom: 1.71429em;
  }

  .prose-sm :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: .857143em;
    border-radius: .3125rem;
    padding-top: .142857em;
    padding-inline-end: .357143em;
    padding-bottom: .142857em;
    padding-inline-start: .357143em;
  }

  .prose-sm :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: .857143em;
  }

  .prose-sm :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: .9em;
  }

  .prose-sm :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: .888889em;
  }

  .prose-sm :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: .857143em;
    line-height: 1.66667;
    margin-top: 1.66667em;
    margin-bottom: 1.66667em;
    border-radius: .25rem;
    padding-top: .666667em;
    padding-inline-end: 1em;
    padding-bottom: .666667em;
    padding-inline-start: 1em;
  }

  .prose-sm :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.14286em;
    margin-bottom: 1.14286em;
    padding-inline-start: 1.57143em;
  }

  .prose-sm :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.14286em;
    margin-bottom: 1.14286em;
    padding-inline-start: 1.57143em;
  }

  .prose-sm :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: .285714em;
    margin-bottom: .285714em;
  }

  .prose-sm :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-start: .428571em;
  }

  .prose-sm :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-start: .428571em;
  }

  .prose-sm :where(.prose-sm > ul > li p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: .571429em;
    margin-bottom: .571429em;
  }

  .prose-sm :where(.prose-sm > ul > li > p:first-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.14286em;
  }

  .prose-sm :where(.prose-sm > ul > li > p:last-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-bottom: 1.14286em;
  }

  .prose-sm :where(.prose-sm > ol > li > p:first-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.14286em;
  }

  .prose-sm :where(.prose-sm > ol > li > p:last-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-bottom: 1.14286em;
  }

  .prose-sm :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: .571429em;
    margin-bottom: .571429em;
  }

  .prose-sm :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.14286em;
    margin-bottom: 1.14286em;
  }

  .prose-sm :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.14286em;
  }

  .prose-sm :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: .285714em;
    padding-inline-start: 1.57143em;
  }

  .prose-sm :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2.85714em;
    margin-bottom: 2.85714em;
  }

  .prose-sm :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }

  .prose-sm :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }

  .prose-sm :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }

  .prose-sm :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }

  .prose-sm :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: .857143em;
    line-height: 1.5;
  }

  .prose-sm :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-end: 1em;
    padding-bottom: .666667em;
    padding-inline-start: 1em;
  }

  .prose-sm :where(thead th:first-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-start: 0;
  }

  .prose-sm :where(thead th:last-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-end: 0;
  }

  .prose-sm :where(tbody td, tfoot td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-top: .666667em;
    padding-inline-end: 1em;
    padding-bottom: .666667em;
    padding-inline-start: 1em;
  }

  .prose-sm :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-start: 0;
  }

  .prose-sm :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-end: 0;
  }

  .prose-sm :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.71429em;
    margin-bottom: 1.71429em;
  }

  .prose-sm :where(figure > *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
    margin-bottom: 0;
  }

  .prose-sm :where(figcaption):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: .857143em;
    line-height: 1.33333;
    margin-top: .666667em;
  }

  .prose-sm :where(.prose-sm > :first-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }

  .prose-sm :where(.prose-sm > :last-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-bottom: 0;
  }

  .-mt-px {
    margin-top: -1px;
  }

  .mt-0 {
    margin-top: calc(var(--spacing) * 0);
  }

  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }

  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }

  .mr-8 {
    margin-right: calc(var(--spacing) * 8);
  }

  .mb-0 {
    margin-bottom: calc(var(--spacing) * 0);
  }

  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }

  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }

  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }

  .ml-0\.5 {
    margin-left: calc(var(--spacing) * .5);
  }

  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }

  .ml-8 {
    margin-left: calc(var(--spacing) * 8);
  }

  .ml-auto {
    margin-left: auto;
  }

  .box-content {
    box-sizing: content-box;
  }

  .line-clamp-1 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
  }

  .no-scrollbar {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }

  .no-scrollbar::-webkit-scrollbar {
    display: none;
  }

  .block {
    display: block;
  }

  .flex {
    display: flex;
  }

  .grid {
    display: grid;
  }

  .hidden {
    display: none;
  }

  .inline {
    display: inline;
  }

  .inline-flex {
    display: inline-flex;
  }

  .table {
    display: table;
  }

  .table-cell {
    display: table-cell;
  }

  .table-row {
    display: table-row;
  }

  .aspect-\[2\/1\] {
    aspect-ratio: 2;
  }

  .size-2 {
    width: calc(var(--spacing) * 2);
    height: calc(var(--spacing) * 2);
  }

  .size-2\.5 {
    width: calc(var(--spacing) * 2.5);
    height: calc(var(--spacing) * 2.5);
  }

  .size-3 {
    width: calc(var(--spacing) * 3);
    height: calc(var(--spacing) * 3);
  }

  .size-3\.5 {
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
  }

  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .size-5 {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }

  .size-6 {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
  }

  .size-8 {
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
  }

  .size-10 {
    width: calc(var(--spacing) * 10);
    height: calc(var(--spacing) * 10);
  }

  .size-12 {
    width: calc(var(--spacing) * 12);
    height: calc(var(--spacing) * 12);
  }

  .size-32 {
    width: calc(var(--spacing) * 32);
    height: calc(var(--spacing) * 32);
  }

  .size-\[0\.6em\] {
    width: .6em;
    height: .6em;
  }

  .size-full {
    width: 100%;
    height: 100%;
  }

  .h-0\.5 {
    height: calc(var(--spacing) * .5);
  }

  .h-2 {
    height: calc(var(--spacing) * 2);
  }

  .h-4 {
    height: calc(var(--spacing) * 4);
  }

  .h-8 {
    height: calc(var(--spacing) * 8);
  }

  .h-10 {
    height: calc(var(--spacing) * 10);
  }

  .h-12 {
    height: calc(var(--spacing) * 12);
  }

  .h-14 {
    height: calc(var(--spacing) * 14);
  }

  .h-16 {
    height: calc(var(--spacing) * 16);
  }

  .h-20 {
    height: calc(var(--spacing) * 20);
  }

  .h-\[1px\] {
    height: 1px;
  }

  .h-\[calc\(1rem\+env\(safe-area-inset-bottom\,0px\)\)\] {
    height: calc(1rem + env(safe-area-inset-bottom, 0px));
  }

  .h-\[var\(--drawer-height\)\] {
    height: var(--drawer-height);
  }

  .h-auto {
    height: auto;
  }

  .h-full {
    height: 100%;
  }

  .h-px {
    height: 1px;
  }

  .min-h-\[320px\] {
    min-height: 320px;
  }

  .min-h-\[calc\(100vh-0\.5rem\)\] {
    min-height: calc(100vh - .5rem);
  }

  .min-h-\[calc\(var\(--drawer-height\)-1px\)\] {
    min-height: calc(var(--drawer-height)  - 1px);
  }

  .w-4 {
    width: calc(var(--spacing) * 4);
  }

  .w-16 {
    width: calc(var(--spacing) * 16);
  }

  .w-24 {
    width: calc(var(--spacing) * 24);
  }

  .w-32 {
    width: calc(var(--spacing) * 32);
  }

  .w-40 {
    width: calc(var(--spacing) * 40);
  }

  .w-\[1px\] {
    width: 1px;
  }

  .w-\[95\%\] {
    width: 95%;
  }

  .w-fit {
    width: fit-content;
  }

  .w-full {
    width: 100%;
  }

  .w-px {
    width: 1px;
  }

  .max-w-none {
    max-width: none;
  }

  .max-w-screen {
    max-width: 100vw;
  }

  .max-w-sm {
    max-width: var(--container-sm);
  }

  .min-w-40 {
    min-width: calc(var(--spacing) * 40);
  }

  .min-w-\[8rem\] {
    min-width: 8rem;
  }

  .flex-1 {
    flex: 1;
  }

  .shrink-0 {
    flex-shrink: 0;
  }

  .grow {
    flex-grow: 1;
  }

  .translate-px {
    --tw-translate-x: 1px;
    --tw-translate-y: 1px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-x-px {
    --tw-translate-x: -1px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-x-px {
    --tw-translate-x: 1px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-y-full {
    --tw-translate-y: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-y-px {
    --tw-translate-y: -1px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-3 {
    --tw-translate-y: calc(var(--spacing) * 3);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-\[calc\(-50\%_-_2px\)\] {
    --tw-translate-y: calc(-50% - 2px);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-px {
    --tw-translate-y: 1px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .rotate-45 {
    rotate: 45deg;
  }

  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }

  .animate-in {
    animation: enter var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .animate-ping {
    animation: var(--animate-ping);
  }

  .cursor-default {
    cursor: default;
  }

  .cursor-pointer {
    cursor: pointer;
  }

  .scroll-mt-\[4\.75rem\] {
    scroll-margin-top: 4.75rem;
  }

  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .flex-col {
    flex-direction: column;
  }

  .flex-wrap {
    flex-wrap: wrap;
  }

  .items-center {
    align-items: center;
  }

  .items-end {
    align-items: flex-end;
  }

  .items-start {
    align-items: flex-start;
  }

  .justify-between {
    justify-content: space-between;
  }

  .justify-center {
    justify-content: center;
  }

  .justify-end {
    justify-content: flex-end;
  }

  .gap-0 {
    gap: calc(var(--spacing) * 0);
  }

  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }

  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }

  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }

  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }

  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }

  :where(.space-y-1 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-2 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-4 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
  }

  .gap-x-2 {
    column-gap: calc(var(--spacing) * 2);
  }

  :where(.space-x-2 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-3 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
  }

  .gap-y-1 {
    row-gap: calc(var(--spacing) * 1);
  }

  .overflow-hidden {
    overflow: hidden;
  }

  .overflow-x-hidden {
    overflow-x: hidden;
  }

  .overflow-y-auto {
    overflow-y: auto;
  }

  .rounded {
    border-radius: .25rem;
  }

  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }

  .rounded-\[1px\] {
    border-radius: 1px;
  }

  .rounded-\[2px\] {
    border-radius: 2px;
  }

  .rounded-full {
    border-radius: 3.40282e38px;
  }

  .rounded-lg {
    border-radius: var(--radius-lg);
  }

  .rounded-md {
    border-radius: var(--radius-md);
  }

  .rounded-none {
    border-radius: 0;
  }

  .rounded-sm {
    border-radius: var(--radius-sm);
  }

  .rounded-xl {
    border-radius: var(--radius-xl);
  }

  .rounded-t-xl {
    border-top-left-radius: var(--radius-xl);
    border-top-right-radius: var(--radius-xl);
  }

  .rounded-bl-2xl {
    border-bottom-left-radius: var(--radius-2xl);
  }

  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }

  .border-x {
    border-inline-style: var(--tw-border-style);
    border-inline-width: 1px;
  }

  .border-y {
    border-block-style: var(--tw-border-style);
    border-block-width: 1px;
  }

  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }

  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }

  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }

  .border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }

  .border-none {
    --tw-border-style: none;
    border-style: none;
  }

  .border-blue-500 {
    border-color: var(--color-blue-500);
  }

  .border-grid {
    border-color: var(--d-grid);
  }

  .border-input {
    border-color: var(--d-input);
  }

  .border-transparent {
    border-color: #0000;
  }

  .border-zinc-200 {
    border-color: var(--color-zinc-200);
  }

  .border-zinc-800 {
    border-color: var(--color-zinc-800);
  }

  .border-t-grid {
    border-top-color: var(--d-grid);
  }

  .bg-background {
    background-color: var(--d-background);
  }

  .bg-black {
    background-color: var(--color-black);
  }

  .bg-black\/50 {
    background-color: #00000080;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/50 {
      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }

  .bg-blue-50 {
    background-color: var(--color-blue-50);
  }

  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }

  .bg-border {
    background-color: var(--d-border);
  }

  .bg-destructive {
    background-color: var(--d-destructive);
  }

  .bg-foreground {
    background-color: var(--d-foreground);
  }

  .bg-grid {
    background-color: var(--d-grid);
  }

  .bg-muted {
    background-color: var(--d-muted);
  }

  .bg-popover {
    background-color: var(--d-popover);
  }

  .bg-primary {
    background-color: var(--d-primary);
  }

  .bg-success-foreground {
    background-color: var(--d-success-foreground);
  }

  .bg-transparent {
    background-color: #0000;
  }

  .bg-white {
    background-color: var(--color-white);
  }

  .bg-zinc-100 {
    background-color: var(--color-zinc-100);
  }

  .bg-zinc-200 {
    background-color: var(--color-zinc-200);
  }

  .bg-zinc-300 {
    background-color: var(--color-zinc-300);
  }

  .bg-zinc-800 {
    background-color: var(--color-zinc-800);
  }

  .bg-zinc-950 {
    background-color: var(--color-zinc-950);
  }

  .bg-zinc-950\/0\.75 {
    background-color: #09090b02;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-zinc-950\/0\.75 {
      background-color: color-mix(in oklab, var(--color-zinc-950) 0.75%, transparent);
    }
  }

  .bg-\[image\:radial-gradient\(var\(--pattern-foreground\)_1px\,_transparent_0\)\] {
    background-image: radial-gradient(var(--pattern-foreground) 1px, transparent 0);
  }

  .bg-\[image\:repeating-linear-gradient\(0deg\,_var\(--pattern-foreground\)_0\,_var\(--pattern-foreground\)_1px\,_transparent_0\,_transparent_10px\)\,repeating-linear-gradient\(90deg\,_var\(--pattern-foreground\)_0\,_var\(--pattern-foreground\)_1px\,_transparent_0\,_transparent_10px\)\] {
    background-image: repeating-linear-gradient(0deg, var(--pattern-foreground) 0, var(--pattern-foreground) 1px, transparent 0, transparent 10px), repeating-linear-gradient(90deg, var(--pattern-foreground) 0, var(--pattern-foreground) 1px, transparent 0, transparent 10px);
  }

  .bg-\[linear-gradient\(90deg\,transparent\,var\(--color-zinc-800\)_10\%\,var\(--color-zinc-500\)_50\%\,transparent\)\] {
    background-image: linear-gradient(90deg, transparent, var(--color-zinc-800) 10%, var(--color-zinc-500) 50%, transparent);
  }

  .bg-\[linear-gradient\(90deg\,transparent\,var\(--stroke-light\)_10\%\,var\(--stroke-dark\)_80\%\,transparent\)\] {
    background-image: linear-gradient(90deg, transparent, var(--stroke-light) 10%, var(--stroke-dark) 80%, transparent);
  }

  .bg-\[size\:8px_8px\] {
    background-size: 8px 8px;
  }

  .bg-\[size\:10px_10px\] {
    background-size: 10px 10px;
  }

  .bg-\[position\:-1px_0\] {
    background-position: -1px 0;
  }

  .fill-current {
    fill: currentColor;
  }

  .fill-primary {
    fill: var(--d-primary);
  }

  .fill-transparent {
    fill: #0000;
  }

  .stroke-border {
    stroke: var(--d-border);
  }

  .stroke-yellow-400 {
    stroke: var(--color-yellow-400);
  }

  .p-0 {
    padding: calc(var(--spacing) * 0);
  }

  .p-0\.5 {
    padding: calc(var(--spacing) * .5);
  }

  .p-1 {
    padding: calc(var(--spacing) * 1);
  }

  .p-2 {
    padding: calc(var(--spacing) * 2);
  }

  .p-4 {
    padding: calc(var(--spacing) * 4);
  }

  .p-16 {
    padding: calc(var(--spacing) * 16);
  }

  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }

  .px-1\.5 {
    padding-inline: calc(var(--spacing) * 1.5);
  }

  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }

  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }

  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }

  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }

  .px-\[0\.3rem\] {
    padding-inline: .3rem;
  }

  .py-0\.5 {
    padding-block: calc(var(--spacing) * .5);
  }

  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }

  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }

  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }

  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }

  .py-\[0\.2rem\] {
    padding-block: .2rem;
  }

  .py-px {
    padding-block: 1px;
  }

  .pt-1 {
    padding-top: calc(var(--spacing) * 1);
  }

  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }

  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }

  .pr-2 {
    padding-right: calc(var(--spacing) * 2);
  }

  .pr-8 {
    padding-right: calc(var(--spacing) * 8);
  }

  .pb-1 {
    padding-bottom: calc(var(--spacing) * 1);
  }

  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }

  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }

  .pb-\[calc\(0\.5rem\+env\(safe-area-inset-bottom\,0px\)\)\] {
    padding-bottom: calc(.5rem + env(safe-area-inset-bottom, 0px));
  }

  .pb-\[env\(safe-area-inset-bottom\,0px\)\] {
    padding-bottom: env(safe-area-inset-bottom, 0px);
  }

  .pl-1 {
    padding-left: calc(var(--spacing) * 1);
  }

  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }

  .pl-7 {
    padding-left: calc(var(--spacing) * 7);
  }

  .pl-8 {
    padding-left: calc(var(--spacing) * 8);
  }

  .pl-px {
    padding-left: 1px;
  }

  .text-center {
    text-align: center;
  }

  .text-left {
    text-align: left;
  }

  .align-middle {
    vertical-align: middle;
  }

  .font-heading {
    font-family: var(--font-sans);
  }

  .font-mono {
    font-family: var(--font-mono);
  }

  .font-sans {
    font-family: var(--font-sans);
  }

  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }

  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }

  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }

  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }

  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }

  .leading-snug {
    --tw-leading: var(--leading-snug);
    line-height: var(--leading-snug);
  }

  .link {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    text-decoration-line: underline;
    text-underline-offset: 4px;
  }

  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .tracking-widest {
    --tw-tracking: var(--tracking-widest);
    letter-spacing: var(--tracking-widest);
  }

  .text-balance {
    text-wrap: balance;
  }

  .whitespace-normal {
    white-space: normal;
  }

  .whitespace-nowrap {
    white-space: nowrap;
  }

  .text-black {
    color: var(--color-black);
  }

  .text-foreground {
    color: var(--d-foreground);
  }

  .text-info {
    color: var(--d-info);
  }

  .text-info-foreground {
    color: var(--d-info-foreground);
  }

  .text-muted-foreground {
    color: var(--d-muted-foreground);
  }

  .text-popover-foreground {
    color: var(--d-popover-foreground);
  }

  .text-primary-foreground {
    color: var(--d-primary-foreground);
  }

  .text-white {
    color: var(--color-white);
  }

  .text-zinc-50 {
    color: var(--color-zinc-50);
  }

  .text-zinc-300 {
    color: var(--color-zinc-300);
  }

  .text-zinc-400 {
    color: var(--color-zinc-400);
  }

  .text-zinc-950 {
    color: var(--color-zinc-950);
  }

  .underline-offset-4 {
    text-underline-offset: 4px;
  }

  .opacity-50 {
    opacity: .5;
  }

  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-1 {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-black\/8 {
    --tw-ring-color: #00000014;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .ring-black\/8 {
      --tw-ring-color: color-mix(in oklab, var(--color-black) 8%, transparent);
    }
  }

  .ring-black\/10 {
    --tw-ring-color: #0000001a;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .ring-black\/10 {
      --tw-ring-color: color-mix(in oklab, var(--color-black) 10%, transparent);
    }
  }

  .ring-border {
    --tw-ring-color: var(--d-border);
  }

  .ring-grid {
    --tw-ring-color: var(--d-grid);
  }

  .ring-zinc-200 {
    --tw-ring-color: var(--color-zinc-200);
  }

  .ring-zinc-300 {
    --tw-ring-color: var(--color-zinc-300);
  }

  .ring-offset-1 {
    --tw-ring-offset-width: 1px;
    --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }

  .ring-offset-2 {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }

  .ring-offset-background {
    --tw-ring-offset-color: var(--d-background);
  }

  .outline-hidden {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .outline-hidden {
      outline: 2px solid #0000;
      outline-offset: 2px;
    }
  }

  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }

  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .blur-lg {
    --tw-blur: blur(var(--blur-lg));
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .filter {
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-\[color\,box-shadow\] {
    transition-property: color, box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .duration-300 {
    --tw-duration: .3s;
    transition-duration: .3s;
  }

  .duration-500 {
    --tw-duration: .5s;
    transition-duration: .5s;
  }

  .prose-zinc {
    --tw-prose-body: oklch(37% .013 285.805);
    --tw-prose-headings: oklch(21% .006 285.885);
    --tw-prose-lead: oklch(44.2% .017 285.786);
    --tw-prose-links: oklch(21% .006 285.885);
    --tw-prose-bold: oklch(21% .006 285.885);
    --tw-prose-counters: oklch(55.2% .016 285.938);
    --tw-prose-bullets: oklch(87.1% .006 286.286);
    --tw-prose-hr: oklch(92% .004 286.32);
    --tw-prose-quotes: oklch(21% .006 285.885);
    --tw-prose-quote-borders: oklch(92% .004 286.32);
    --tw-prose-captions: oklch(55.2% .016 285.938);
    --tw-prose-kbd: oklch(21% .006 285.885);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(21% .006 285.885);
    --tw-prose-pre-code: oklch(92% .004 286.32);
    --tw-prose-pre-bg: oklch(27.4% .006 286.033);
    --tw-prose-th-borders: oklch(87.1% .006 286.286);
    --tw-prose-td-borders: oklch(92% .004 286.32);
    --tw-prose-invert-body: oklch(87.1% .006 286.286);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(70.5% .015 286.067);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(70.5% .015 286.067);
    --tw-prose-invert-bullets: oklch(44.2% .017 285.786);
    --tw-prose-invert-hr: oklch(37% .013 285.805);
    --tw-prose-invert-quotes: oklch(96.7% .001 286.375);
    --tw-prose-invert-quote-borders: oklch(37% .013 285.805);
    --tw-prose-invert-captions: oklch(70.5% .015 286.067);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(87.1% .006 286.286);
    --tw-prose-invert-pre-bg: #00000080;
    --tw-prose-invert-th-borders: oklch(44.2% .017 285.786);
    --tw-prose-invert-td-borders: oklch(37% .013 285.805);
  }

  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }

  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }

  .select-text {
    -webkit-user-select: text;
    user-select: text;
  }

  .\[--drawer-height\:90dvh\] {
    --drawer-height: 90dvh;
  }

  .\[--pattern-foreground\:var\(--color-black\)\]\/2 {
    --pattern-foreground: #00000005;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .\[--pattern-foreground\:var\(--color-black\)\]\/2 {
      --pattern-foreground: color-mix(in oklab, var(--color-black) 2%, transparent);
    }
  }

  .\[--pattern-foreground\:var\(--color-zinc-950\)\]\/5 {
    --pattern-foreground: #09090b0d;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .\[--pattern-foreground\:var\(--color-zinc-950\)\]\/5 {
      --pattern-foreground: color-mix(in oklab, var(--color-zinc-950) 5%, transparent);
    }
  }

  .fade-in-0 {
    --tw-enter-opacity: 0;
  }

  .ring-inset {
    --tw-ring-inset: inset;
  }

  .running {
    animation-play-state: running;
  }

  .zoom-in-95 {
    --tw-enter-scale: .95;
  }

  :is(.\*\:absolute > *) {
    position: absolute;
  }

  :is(.\*\:size-\[9px\] > *) {
    width: 9px;
    height: 9px;
  }

  :is(.\*\:border > *) {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }

  :is(.\*\:border-blue-500 > *) {
    border-color: var(--color-blue-500);
  }

  :is(.\*\:bg-background > *) {
    background-color: var(--d-background);
  }

  @media (hover: hover) {
    .group-hover\/award\:underline:is(:where(.group\/award):hover *) {
      text-decoration-line: underline;
    }
  }

  @media (hover: hover) {
    .group-hover\/experience\:underline:is(:where(.group\/experience):hover *) {
      text-decoration-line: underline;
    }
  }

  @media (hover: hover) {
    .group-hover\/post\:underline:is(:where(.group\/post):hover *) {
      text-decoration-line: underline;
    }
  }

  @media (hover: hover) {
    .group-hover\/project\:underline:is(:where(.group\/project):hover *) {
      text-decoration-line: underline;
    }
  }

  @media (hover: hover) {
    .group-hover\/social-link\:underline:is(:where(.group\/social-link):hover *) {
      text-decoration-line: underline;
    }
  }

  .group-disabled\/award\:no-underline:is(:where(.group\/award):disabled *) {
    text-decoration-line: none;
  }

  .group-data-\[state\=open\]\/toggle\:translate-y-\[-3px\]:is(:where(.group\/toggle)[data-state="open"] *) {
    --tw-translate-y: -3px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .group-data-\[state\=open\]\/toggle\:translate-y-\[3px\]:is(:where(.group\/toggle)[data-state="open"] *) {
    --tw-translate-y: 3px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .group-data-\[state\=open\]\/toggle\:-rotate-45:is(:where(.group\/toggle)[data-state="open"] *) {
    rotate: -45deg;
  }

  .group-data-\[state\=open\]\/toggle\:rotate-45:is(:where(.group\/toggle)[data-state="open"] *) {
    rotate: 45deg;
  }

  .group-\[\.toast\]\:bg-zinc-100:is(:where(.group).toast *) {
    background-color: var(--color-zinc-100);
  }

  .group-\[\.toast\]\:bg-zinc-900:is(:where(.group).toast *) {
    background-color: var(--color-zinc-900);
  }

  .group-\[\.toast\]\:text-zinc-50:is(:where(.group).toast *) {
    color: var(--color-zinc-50);
  }

  .group-\[\.toast\]\:text-zinc-500:is(:where(.group).toast *) {
    color: var(--color-zinc-500);
  }

  .group-\[\.toaster\]\:border-zinc-200:is(:where(.group).toaster *) {
    border-color: var(--color-zinc-200);
  }

  .group-\[\.toaster\]\:bg-white:is(:where(.group).toaster *) {
    background-color: var(--color-white);
  }

  .group-\[\.toaster\]\:text-zinc-950:is(:where(.group).toaster *) {
    color: var(--color-zinc-950);
  }

  .group-\[\.toaster\]\:shadow-lg:is(:where(.group).toaster *) {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .group-\[\&\[data-state\=closed\]\]\/collapsible-trigger\:block:is(:where(.group\/collapsible-trigger)[data-state="closed"] *) {
    display: block;
  }

  .group-\[\&\[data-state\=open\]\]\/collapsible-trigger\:block:is(:where(.group\/collapsible-trigger)[data-state="open"] *) {
    display: block;
  }

  .group-\[\&\[data-state\=open\]\]\/collapsible-trigger\:rotate-180:is(:where(.group\/collapsible-trigger)[data-state="open"] *) {
    rotate: 180deg;
  }

  .before\:absolute:before {
    content: var(--tw-content);
    position: absolute;
  }

  .before\:-left-\[100vw\]:before {
    content: var(--tw-content);
    left: -100vw;
  }

  .before\:left-3:before {
    content: var(--tw-content);
    left: calc(var(--spacing) * 3);
  }

  .before\:-z-1:before {
    content: var(--tw-content);
    z-index: calc(1 * -1);
  }

  .before\:z-1:before {
    content: var(--tw-content);
    z-index: 1;
  }

  .before\:h-4:before {
    content: var(--tw-content);
    height: calc(var(--spacing) * 4);
  }

  .before\:h-full:before {
    content: var(--tw-content);
    height: 100%;
  }

  .before\:w-\[200vw\]:before {
    content: var(--tw-content);
    width: 200vw;
  }

  .before\:w-px:before {
    content: var(--tw-content);
    width: 1px;
  }

  .before\:bg-border:before {
    content: var(--tw-content);
    background-color: var(--d-border);
  }

  .before\:bg-\[image\:repeating-linear-gradient\(315deg\,_var\(--pattern-foreground\)_0\,_var\(--pattern-foreground\)_1px\,_transparent_0\,_transparent_50\%\)\]:before {
    content: var(--tw-content);
    background-image: repeating-linear-gradient(315deg, var(--pattern-foreground) 0, var(--pattern-foreground) 1px, transparent 0, transparent 50%);
  }

  .before\:bg-\[size\:10px_10px\]:before {
    content: var(--tw-content);
    background-size: 10px 10px;
  }

  .before\:\[--pattern-foreground\:var\(--color-black\)\]\/5:before {
    content: var(--tw-content);
    --pattern-foreground: #0000000d;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .before\:\[--pattern-foreground\:var\(--color-black\)\]\/5:before {
      --pattern-foreground: color-mix(in oklab, var(--color-black) 5%, transparent);
    }
  }

  .after\:-bottom-px:after {
    content: var(--tw-content);
    bottom: -1px;
  }

  .last\:before\:absolute:last-child:before {
    content: var(--tw-content);
    position: absolute;
  }

  .last\:before\:h-full:last-child:before {
    content: var(--tw-content);
    height: 100%;
  }

  .last\:before\:w-4:last-child:before {
    content: var(--tw-content);
    width: calc(var(--spacing) * 4);
  }

  .last\:before\:bg-background:last-child:before {
    content: var(--tw-content);
    background-color: var(--d-background);
  }

  @media (hover: hover) {
    .hover\:bg-accent:hover {
      background-color: var(--d-accent);
    }
  }

  @media (hover: hover) {
    .hover\:bg-destructive\/90:hover {
      background-color: var(--d-destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-destructive\/90:hover {
        background-color: color-mix(in oklab, var(--d-destructive) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-muted\/50:hover {
      background-color: var(--d-muted);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-muted\/50:hover {
        background-color: color-mix(in oklab, var(--d-muted) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-primary\/90:hover {
      background-color: var(--d-primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-primary\/90:hover {
        background-color: color-mix(in oklab, var(--d-primary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-zinc-700:hover {
      background-color: var(--color-zinc-700);
    }
  }

  @media (hover: hover) {
    .hover\:text-accent-foreground:hover {
      color: var(--d-accent-foreground);
    }
  }

  @media (hover: hover) {
    .hover\:text-zinc-50:hover {
      color: var(--color-zinc-50);
    }
  }

  @media (hover: hover) {
    .hover\:text-zinc-950:hover {
      color: var(--color-zinc-950);
    }
  }

  @media (hover: hover) {
    .hover\:underline:hover {
      text-decoration-line: underline;
    }
  }

  .focus\:bg-accent:focus {
    background-color: var(--d-accent);
  }

  .focus\:text-accent-foreground:focus {
    color: var(--d-accent-foreground);
  }

  .focus\:outline-none:focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  .focus-visible\:border-ring:focus-visible {
    border-color: var(--d-ring);
  }

  .focus-visible\:ring-\[3px\]:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus-visible\:ring-destructive\/20:focus-visible {
    --tw-ring-color: var(--d-destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-destructive\/20:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--d-destructive) 20%, transparent);
    }
  }

  .focus-visible\:ring-ring\/50:focus-visible {
    --tw-ring-color: var(--d-ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-ring\/50:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--d-ring) 50%, transparent);
    }
  }

  .focus-visible\:outline-1:focus-visible {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }

  .focus-visible\:outline-ring:focus-visible {
    outline-color: var(--d-ring);
  }

  .disabled\:pointer-events-none:disabled {
    pointer-events: none;
  }

  .disabled\:opacity-50:disabled {
    opacity: .5;
  }

  .aria-invalid\:border-destructive[aria-invalid="true"] {
    border-color: var(--d-destructive);
  }

  .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
    --tw-ring-color: var(--d-destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--d-destructive) 20%, transparent);
    }
  }

  .data-\[disabled\]\:pointer-events-none[data-disabled] {
    pointer-events: none;
  }

  .data-\[disabled\]\:opacity-50[data-disabled] {
    opacity: .5;
  }

  .data-\[inset\]\:pl-8[data-inset] {
    padding-left: calc(var(--spacing) * 8);
  }

  .data-\[side\=bottom\]\:slide-in-from-top-2[data-side="bottom"] {
    --tw-enter-translate-y: calc(2 * var(--spacing) * -1);
  }

  .data-\[side\=left\]\:slide-in-from-right-2[data-side="left"] {
    --tw-enter-translate-x: calc(2 * var(--spacing));
  }

  .data-\[side\=right\]\:slide-in-from-left-2[data-side="right"] {
    --tw-enter-translate-x: calc(2 * var(--spacing) * -1);
  }

  .data-\[side\=top\]\:slide-in-from-bottom-2[data-side="top"] {
    --tw-enter-translate-y: calc(2 * var(--spacing));
  }

  .data-\[state\=active\]\:border-zinc-50[data-state="active"] {
    border-color: var(--color-zinc-50);
  }

  .data-\[state\=active\]\:bg-transparent[data-state="active"] {
    background-color: #0000;
  }

  .data-\[state\=active\]\:bg-white[data-state="active"] {
    background-color: var(--color-white);
  }

  .data-\[state\=active\]\:text-foreground[data-state="active"] {
    color: var(--d-foreground);
  }

  .data-\[state\=active\]\:text-zinc-50[data-state="active"] {
    color: var(--color-zinc-50);
  }

  .data-\[state\=active\]\:shadow-none[data-state="active"] {
    --tw-shadow: 0 0 #0000;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .data-\[state\=active\]\:shadow-sm[data-state="active"] {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .data-\[state\=closed\]\:animate-accordion-up[data-state="closed"] {
    animation: accordion-up var(--tw-duration, .2s) ease-out;
  }

  .data-\[state\=closed\]\:animate-out[data-state="closed"] {
    animation: exit var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .data-\[state\=closed\]\:fade-out-0[data-state="closed"] {
    --tw-exit-opacity: 0;
  }

  .data-\[state\=closed\]\:zoom-out-95[data-state="closed"] {
    --tw-exit-scale: .95;
  }

  .data-\[state\=open\]\:animate-accordion-down[data-state="open"] {
    animation: accordion-down var(--tw-duration, .2s) ease-out;
  }

  .data-\[state\=open\]\:animate-in[data-state="open"] {
    animation: enter var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .data-\[state\=open\]\:bg-accent[data-state="open"] {
    background-color: var(--d-accent);
  }

  .data-\[state\=open\]\:text-accent-foreground[data-state="open"] {
    color: var(--d-accent-foreground);
  }

  .data-\[state\=open\]\:fade-in-0[data-state="open"] {
    --tw-enter-opacity: 0;
  }

  .data-\[state\=open\]\:zoom-in-95[data-state="open"] {
    --tw-enter-scale: .95;
  }

  .data-\[variant\=destructive\]\:text-destructive[data-variant="destructive"] {
    color: var(--d-destructive);
  }

  .data-\[variant\=destructive\]\:focus\:bg-destructive\/10[data-variant="destructive"]:focus {
    background-color: var(--d-destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .data-\[variant\=destructive\]\:focus\:bg-destructive\/10[data-variant="destructive"]:focus {
      background-color: color-mix(in oklab, var(--d-destructive) 10%, transparent);
    }
  }

  .data-\[variant\=destructive\]\:focus\:text-destructive[data-variant="destructive"]:focus {
    color: var(--d-destructive);
  }

  @media (width < 40rem) {
    .max-sm\:screen-line-before {
      position: relative;
    }

    .max-sm\:screen-line-before:before {
      content: var(--tw-content);
      position: absolute;
    }

    .max-sm\:screen-line-before:before {
      content: var(--tw-content);
      top: calc(var(--spacing) * 0);
    }

    .max-sm\:screen-line-before:before {
      content: var(--tw-content);
      left: -100vw;
    }

    .max-sm\:screen-line-before:before {
      content: var(--tw-content);
      z-index: calc(1 * -1);
    }

    .max-sm\:screen-line-before:before {
      content: var(--tw-content);
      height: 1px;
    }

    .max-sm\:screen-line-before:before {
      content: var(--tw-content);
      width: 200vw;
    }

    .max-sm\:screen-line-before:before {
      content: var(--tw-content);
      background-color: var(--d-grid);
    }
  }

  @media (width < 40rem) {
    .max-sm\:screen-line-after {
      position: relative;
    }

    .max-sm\:screen-line-after:after {
      content: var(--tw-content);
      position: absolute;
    }

    .max-sm\:screen-line-after:after {
      content: var(--tw-content);
      bottom: calc(var(--spacing) * 0);
    }

    .max-sm\:screen-line-after:after {
      content: var(--tw-content);
      left: -100vw;
    }

    .max-sm\:screen-line-after:after {
      content: var(--tw-content);
      z-index: calc(1 * -1);
    }

    .max-sm\:screen-line-after:after {
      content: var(--tw-content);
      height: 1px;
    }

    .max-sm\:screen-line-after:after {
      content: var(--tw-content);
      width: 200vw;
    }

    .max-sm\:screen-line-after:after {
      content: var(--tw-content);
      background-color: var(--d-grid);
    }
  }

  @media (width < 40rem) {
    .max-sm\:hidden {
      display: none;
    }
  }

  @media (width >= 40rem) {
    .sm\:block {
      display: block;
    }
  }

  @media (width >= 40rem) {
    .sm\:hidden {
      display: none;
    }
  }

  @media (width >= 40rem) {
    .sm\:size-40 {
      width: calc(var(--spacing) * 40);
      height: calc(var(--spacing) * 40);
    }
  }

  @media (width >= 40rem) {
    .sm\:h-16 {
      height: calc(var(--spacing) * 16);
    }
  }

  @media (width >= 40rem) {
    .sm\:h-20 {
      height: calc(var(--spacing) * 20);
    }
  }

  @media (width >= 40rem) {
    .sm\:h-auto {
      height: auto;
    }
  }

  @media (width >= 40rem) {
    .sm\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 40rem) {
    .sm\:rounded-t-2xl {
      border-top-left-radius: var(--radius-2xl);
      border-top-right-radius: var(--radius-2xl);
    }
  }

  @media (width >= 40rem) {
    .sm\:rounded-bl-lg {
      border-bottom-left-radius: var(--radius-lg);
    }
  }

  @media (width >= 40rem) {
    .sm\:bg-\[size\:10px_10px\] {
      background-size: 10px 10px;
    }
  }

  @media (width >= 40rem) {
    .sm\:pl-3 {
      padding-left: calc(var(--spacing) * 3);
    }
  }

  @media (width >= 40rem) {
    .sm\:nth-\[2n\+1\]\:screen-line-before:nth-child(odd) {
      position: relative;
    }

    .sm\:nth-\[2n\+1\]\:screen-line-before:nth-child(odd):before {
      content: var(--tw-content);
      position: absolute;
    }

    .sm\:nth-\[2n\+1\]\:screen-line-before:nth-child(odd):before {
      content: var(--tw-content);
      top: calc(var(--spacing) * 0);
    }

    .sm\:nth-\[2n\+1\]\:screen-line-before:nth-child(odd):before {
      content: var(--tw-content);
      left: -100vw;
    }

    .sm\:nth-\[2n\+1\]\:screen-line-before:nth-child(odd):before {
      content: var(--tw-content);
      z-index: calc(1 * -1);
    }

    .sm\:nth-\[2n\+1\]\:screen-line-before:nth-child(odd):before {
      content: var(--tw-content);
      height: 1px;
    }

    .sm\:nth-\[2n\+1\]\:screen-line-before:nth-child(odd):before {
      content: var(--tw-content);
      width: 200vw;
    }

    .sm\:nth-\[2n\+1\]\:screen-line-before:nth-child(odd):before {
      content: var(--tw-content);
      background-color: var(--d-grid);
    }
  }

  @media (width >= 40rem) {
    .sm\:nth-\[2n\+1\]\:screen-line-after:nth-child(odd) {
      position: relative;
    }

    .sm\:nth-\[2n\+1\]\:screen-line-after:nth-child(odd):after {
      content: var(--tw-content);
      position: absolute;
    }

    .sm\:nth-\[2n\+1\]\:screen-line-after:nth-child(odd):after {
      content: var(--tw-content);
      bottom: calc(var(--spacing) * 0);
    }

    .sm\:nth-\[2n\+1\]\:screen-line-after:nth-child(odd):after {
      content: var(--tw-content);
      left: -100vw;
    }

    .sm\:nth-\[2n\+1\]\:screen-line-after:nth-child(odd):after {
      content: var(--tw-content);
      z-index: calc(1 * -1);
    }

    .sm\:nth-\[2n\+1\]\:screen-line-after:nth-child(odd):after {
      content: var(--tw-content);
      height: 1px;
    }

    .sm\:nth-\[2n\+1\]\:screen-line-after:nth-child(odd):after {
      content: var(--tw-content);
      width: 200vw;
    }

    .sm\:nth-\[2n\+1\]\:screen-line-after:nth-child(odd):after {
      content: var(--tw-content);
      background-color: var(--d-grid);
    }
  }

  @media (width >= 48rem) {
    .md\:max-w-3xl {
      max-width: var(--container-3xl);
    }
  }

  @media (width >= 64rem) {
    .lg\:right-8 {
      right: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 64rem) {
    .lg\:bottom-\[calc\(2rem\+env\(safe-area-inset-bottom\,0px\)\)\] {
      bottom: calc(2rem + env(safe-area-inset-bottom, 0px));
    }
  }

  @media (width >= 64rem) {
    .lg\:bottom-\[calc\(5\.5rem\+env\(safe-area-inset-bottom\,0px\)\)\] {
      bottom: calc(5.5rem + env(safe-area-inset-bottom, 0px));
    }
  }

  .dark\:block:where(.dark, .dark *) {
    display: block;
  }

  .dark\:hidden:where(.dark, .dark *) {
    display: none;
  }

  .dark\:inline:where(.dark, .dark *) {
    display: inline;
  }

  .dark\:border-border:where(.dark, .dark *) {
    border-color: var(--d-border);
  }

  .dark\:border-zinc-600:where(.dark, .dark *) {
    border-color: var(--color-zinc-600);
  }

  .dark\:border-zinc-700:where(.dark, .dark *) {
    border-color: var(--color-zinc-700);
  }

  .dark\:bg-accent\/50:where(.dark, .dark *) {
    background-color: var(--d-accent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-accent\/50:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--d-accent) 50%, transparent);
    }
  }

  .dark\:bg-black\/80:where(.dark, .dark *) {
    background-color: #000c;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-black\/80:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-black) 80%, transparent);
    }
  }

  .dark\:bg-input\/30:where(.dark, .dark *) {
    background-color: var(--d-input);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-input\/30:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--d-input) 30%, transparent);
    }
  }

  .dark\:bg-transparent:where(.dark, .dark *) {
    background-color: #0000;
  }

  .dark\:bg-white\/0\.75:where(.dark, .dark *) {
    background-color: #ffffff02;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-white\/0\.75:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-white) 0.75%, transparent);
    }
  }

  .dark\:bg-zinc-600:where(.dark, .dark *) {
    background-color: var(--color-zinc-600);
  }

  .dark\:bg-zinc-900:where(.dark, .dark *) {
    background-color: var(--color-zinc-900);
  }

  .dark\:bg-zinc-950:where(.dark, .dark *) {
    background-color: var(--color-zinc-950);
  }

  .dark\:text-accent-foreground:where(.dark, .dark *) {
    color: var(--d-accent-foreground);
  }

  .dark\:text-white:where(.dark, .dark *) {
    color: var(--color-white);
  }

  .dark\:text-zinc-50:where(.dark, .dark *) {
    color: var(--color-zinc-50);
  }

  .dark\:text-zinc-500:where(.dark, .dark *) {
    color: var(--color-zinc-500);
  }

  .dark\:text-zinc-800:where(.dark, .dark *) {
    color: var(--color-zinc-800);
  }

  .dark\:ring-white\/8:where(.dark, .dark *) {
    --tw-ring-color: #ffffff14;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:ring-white\/8:where(.dark, .dark *) {
      --tw-ring-color: color-mix(in oklab, var(--color-white) 8%, transparent);
    }
  }

  .dark\:ring-white\/10:where(.dark, .dark *) {
    --tw-ring-color: #ffffff1a;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:ring-white\/10:where(.dark, .dark *) {
      --tw-ring-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }

  .dark\:ring-zinc-700:where(.dark, .dark *) {
    --tw-ring-color: var(--color-zinc-700);
  }

  .dark\:prose-invert:where(.dark, .dark *) {
    --tw-prose-body: var(--tw-prose-invert-body);
    --tw-prose-headings: var(--tw-prose-invert-headings);
    --tw-prose-lead: var(--tw-prose-invert-lead);
    --tw-prose-links: var(--tw-prose-invert-links);
    --tw-prose-bold: var(--tw-prose-invert-bold);
    --tw-prose-counters: var(--tw-prose-invert-counters);
    --tw-prose-bullets: var(--tw-prose-invert-bullets);
    --tw-prose-hr: var(--tw-prose-invert-hr);
    --tw-prose-quotes: var(--tw-prose-invert-quotes);
    --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
    --tw-prose-captions: var(--tw-prose-invert-captions);
    --tw-prose-kbd: var(--tw-prose-invert-kbd);
    --tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows);
    --tw-prose-code: var(--tw-prose-invert-code);
    --tw-prose-pre-code: var(--tw-prose-invert-pre-code);
    --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
    --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
    --tw-prose-td-borders: var(--tw-prose-invert-td-borders);
  }

  .dark\:\[--pattern-foreground\:var\(--color-white\)\]\/2:where(.dark, .dark *) {
    --pattern-foreground: #ffffff05;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:\[--pattern-foreground\:var\(--color-white\)\]\/2:where(.dark, .dark *) {
      --pattern-foreground: color-mix(in oklab, var(--color-white) 2%, transparent);
    }
  }

  .dark\:\[--pattern-foreground\:var\(--color-white\)\]\/5:where(.dark, .dark *) {
    --pattern-foreground: #ffffff0d;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:\[--pattern-foreground\:var\(--color-white\)\]\/5:where(.dark, .dark *) {
      --pattern-foreground: color-mix(in oklab, var(--color-white) 5%, transparent);
    }
  }

  .dark\:\[--stroke-dark\:var\(--color-zinc-700\)\]:where(.dark, .dark *) {
    --stroke-dark: var(--color-zinc-700);
  }

  .dark\:\[--stroke-light\:var\(--color-zinc-800\)\]:where(.dark, .dark *) {
    --stroke-light: var(--color-zinc-800);
  }

  :is(.dark\:\*\:border-zinc-600:where(.dark, .dark *) > *) {
    border-color: var(--color-zinc-600);
  }

  .dark\:group-\[\.toast\]\:bg-zinc-50:where(.dark, .dark *):is(:where(.group).toast *) {
    background-color: var(--color-zinc-50);
  }

  .dark\:group-\[\.toast\]\:bg-zinc-800:where(.dark, .dark *):is(:where(.group).toast *) {
    background-color: var(--color-zinc-800);
  }

  .dark\:group-\[\.toast\]\:text-zinc-400:where(.dark, .dark *):is(:where(.group).toast *) {
    color: var(--color-zinc-400);
  }

  .dark\:group-\[\.toast\]\:text-zinc-900:where(.dark, .dark *):is(:where(.group).toast *) {
    color: var(--color-zinc-900);
  }

  .dark\:group-\[\.toaster\]\:border-zinc-700:where(.dark, .dark *):is(:where(.group).toaster *) {
    border-color: var(--color-zinc-700);
  }

  .dark\:group-\[\.toaster\]\:bg-zinc-800:where(.dark, .dark *):is(:where(.group).toaster *) {
    background-color: var(--color-zinc-800);
  }

  .dark\:group-\[\.toaster\]\:text-zinc-50:where(.dark, .dark *):is(:where(.group).toaster *) {
    color: var(--color-zinc-50);
  }

  .dark\:before\:\[--pattern-foreground\:var\(--color-white\)\]\/5:where(.dark, .dark *):before {
    content: var(--tw-content);
    --pattern-foreground: #ffffff0d;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:before\:\[--pattern-foreground\:var\(--color-white\)\]\/5:where(.dark, .dark *):before {
      --pattern-foreground: color-mix(in oklab, var(--color-white) 5%, transparent);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:text-zinc-50:where(.dark, .dark *):hover {
      color: var(--color-zinc-50);
    }
  }

  .dark\:focus-visible\:ring-destructive\/40:where(.dark, .dark *):focus-visible {
    --tw-ring-color: var(--d-destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:focus-visible\:ring-destructive\/40:where(.dark, .dark *):focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--d-destructive) 40%, transparent);
    }
  }

  .dark\:aria-invalid\:ring-destructive\/40:where(.dark, .dark *)[aria-invalid="true"] {
    --tw-ring-color: var(--d-destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:aria-invalid\:ring-destructive\/40:where(.dark, .dark *)[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--d-destructive) 40%, transparent);
    }
  }

  .dark\:data-\[state\=active\]\:bg-transparent:where(.dark, .dark *)[data-state="active"] {
    background-color: #0000;
  }

  .dark\:data-\[state\=active\]\:bg-zinc-700:where(.dark, .dark *)[data-state="active"] {
    background-color: var(--color-zinc-700);
  }

  .prose-headings\:font-heading :where(h1, h2, h3, h4, h5, h6, th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-family: var(--font-sans);
  }

  .prose-headings\:font-medium :where(h1, h2, h3, h4, h5, h6, th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .prose-headings\:text-balance :where(h1, h2, h3, h4, h5, h6, th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    text-wrap: balance;
  }

  .prose-h2\:border-b :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }

  .prose-h2\:pb-2 :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-bottom: calc(var(--spacing) * 2);
  }

  .prose-a\:font-medium :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .prose-a\:break-words :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    overflow-wrap: break-word;
  }

  .prose-a\:text-foreground :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--d-foreground);
  }

  .prose-a\:underline :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    text-decoration-line: underline;
  }

  .prose-a\:underline-offset-4 :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    text-underline-offset: 4px;
  }

  .prose-code\:rounded :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-radius: .25rem;
  }

  .prose-code\:bg-muted :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    background-color: var(--d-muted);
  }

  .prose-code\:px-\[0\.3rem\] :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline: .3rem;
  }

  .prose-code\:py-\[0\.2rem\] :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-block: .2rem;
  }

  .prose-code\:text-sm :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .prose-code\:font-normal :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }

  .prose-code\:before\:content-none :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)):before {
    content: var(--tw-content);
    --tw-content: none;
    content: none;
  }

  .prose-code\:after\:content-none :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)):after {
    content: var(--tw-content);
    --tw-content: none;
    content: none;
  }

  .prose-hr\:border-grid :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-color: var(--d-grid);
  }

  .prose-lead\:text-base :where([class~="lead"]):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }

  .\[\&_img\]\:aspect-\[1200\/630\] img {
    aspect-ratio: 1200 / 630;
  }

  .\[\&_img\]\:rounded-xl img {
    border-radius: var(--radius-xl);
  }

  .\[\&_svg\]\:pointer-events-none svg {
    pointer-events: none;
  }

  .\[\&_svg\]\:size-4 svg {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .\[\&_svg\]\:shrink-0 svg {
    flex-shrink: 0;
  }

  .\[\&_svg\]\:text-muted-foreground svg {
    color: var(--d-muted-foreground);
  }

  .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 svg:not([class*="size-"]) {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .\[\&_svg\:not\(\[class\*\=\'text-\'\]\)\]\:text-muted-foreground svg:not([class*="text-"]) {
    color: var(--d-muted-foreground);
  }

  .\[\&_tr\]\:border-b tr {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }

  .\[\&_tr\:last-child\]\:border-0 tr:last-child {
    border-style: var(--tw-border-style);
    border-width: 0;
  }

  :is(.data-\[variant\=destructive\]\:\*\:\[svg\]\:\!text-destructive[data-variant="destructive"] > *):is(svg) {
    color: var(--d-destructive) !important;
  }

  .\[\&\>figure\]\:m-0 > figure {
    margin: calc(var(--spacing) * 0);
  }

  .\[\&\>figure\]\:mb-0 > figure {
    margin-bottom: calc(var(--spacing) * 0);
  }

  .\[\&\[data-state\=open\]_\.lucide-chevron-down\]\:rotate-180[data-state="open"] .lucide-chevron-down {
    rotate: 180deg;
  }

  html.dark .\[html\.dark_\&\]\:block {
    display: block;
  }

  html.light .\[html\.light_\&\]\:block {
    display: block;
  }
}

:root {
  --d-background: oklch(1 0 0);
  --d-foreground: oklch(.141 .005 285.823);
  --d-primary: oklch(.141 .005 285.823);
  --d-primary-foreground: oklch(.985 0 0);
  --d-muted: oklch(.967 .001 286.375);
  --d-muted-foreground: oklch(.552 .016 285.938);
  --d-card: oklch(1 0 0);
  --d-popover: oklch(1 0 0);
  --d-popover-foreground: oklch(.141 .005 285.823);
  --d-accent: oklch(.967 .001 286.375);
  --d-accent-foreground: oklch(.21 .006 285.885);
  --d-border: oklch(.92 .004 286.32);
  --d-grid: oklch(.967 .001 286.375);
  --d-input: oklch(.92 .004 286.32);
  --d-ring: oklch(.488 .243 264.376);
  --d-info: oklch(.546 .245 262.881);
  --d-info-foreground: oklch(.488 .243 264.376);
  --d-success: oklch(.627 .194 149.214);
  --d-success-foreground: oklch(.627 .194 149.214);
  --d-destructive: oklch(.577 .245 27.325);
  --d-destructive-foreground: oklch(.577 .245 27.325);
  --d-link: oklch(.488 .243 264.376);
}

.dark {
  --d-background: oklch(.141 .005 285.823);
  --d-foreground: oklch(.985 0 0);
  --d-primary: oklch(.37 .013 285.805);
  --d-primary-foreground: oklch(.985 0 0);
  --d-muted: oklch(.274 .006 286.033);
  --d-muted-foreground: oklch(.705 .015 286.067);
  --d-card: oklch(.21 .006 285.885);
  --d-popover: oklch(.21 .006 285.885);
  --d-popover-foreground: oklch(.985 0 0);
  --d-accent: oklch(.274 .006 286.033);
  --d-accent-foreground: oklch(.985 0 0);
  --d-border: oklch(.274 .006 286.033);
  --d-grid: oklch(.21 .006 285.885);
  --d-input: oklch(.274 .006 286.033);
  --d-ring: oklch(.623 .214 259.815);
  --d-info: oklch(.488 .243 264.376);
  --d-info-foreground: oklch(.623 .214 259.815);
  --d-success: oklch(.527 .154 150.069);
  --d-success-foreground: oklch(.723 .219 149.579);
  --d-destructive: oklch(.505 .213 27.518);
  --d-destructive-foreground: oklch(.637 .237 25.331);
  --d-link: oklch(.623 .214 259.815);
}

@layer base {
  *, :after, :before, ::backdrop, ::file-selector-button {
    border-color: var(--d-border);
  }

  html {
    scroll-behavior: smooth;
  }

  body {
    overscroll-behavior: none;
    background-color: var(--d-background);
    font-family: var(--font-sans);
    color: var(--d-foreground);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-synthesis-weight: none;
    text-rendering: optimizeLegibility;
  }

  ::-webkit-scrollbar {
    width: 5px;
  }

  ::-webkit-scrollbar-track {
    background: none;
  }

  ::-webkit-scrollbar-thumb {
    background: var(--d-border);
    border-radius: 5px;
  }

  * {
    scrollbar-width: thin;
    scrollbar-color: var(--d-border) transparent;
  }
}

@property --tw-content {
  syntax: "*";
  inherits: false;
  initial-value: "";
}

@property --tw-font-weight {
  syntax: "*";
  inherits: false
}

@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}

@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}

@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}

@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}

@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}

@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-leading {
  syntax: "*";
  inherits: false
}

@property --tw-tracking {
  syntax: "*";
  inherits: false
}

@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
  syntax: "*";
  inherits: false
}

@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}

@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}

@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-blur {
  syntax: "*";
  inherits: false
}

@property --tw-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-invert {
  syntax: "*";
  inherits: false
}

@property --tw-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false
}

@property --tw-duration {
  syntax: "*";
  inherits: false
}

@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}

@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
  }
}

@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
  }
}

@keyframes accordion-down {
  from {
    height: 0;
  }

  to {
    height: var(--radix-accordion-content-height, var(--bits-accordion-content-height));
  }
}

@keyframes accordion-up {
  from {
    height: var(--radix-accordion-content-height, var(--bits-accordion-content-height));
  }

  to {
    height: 0;
  }
}

@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *, :before, :after, ::backdrop {
      --tw-content: "";
      --tw-font-weight: initial;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: rotateX(0);
      --tw-rotate-y: rotateY(0);
      --tw-rotate-z: rotateZ(0);
      --tw-skew-x: skewX(0);
      --tw-skew-y: skewY(0);
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-duration: initial;
    }
  }
}

/*# sourceMappingURL=src_styles_globals_b52d8e88.css.map*/